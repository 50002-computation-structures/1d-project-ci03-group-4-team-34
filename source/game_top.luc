module game_top (
  input clk,
  input rst,
  input io_button[5],
  input io_dip[3][8],
  output io_led[3][8],
  output io_segment[8],
  output io_select[4]
) {
  const CHAIN = 4;
  const STATE_IDLE = 0;

  sig segment_values[8][4]; // For CHAIN = 4
  sig has_drawn;

  // FSM ↔️ ALU control signals
  sig alu_a[32];
  sig alu_b[32];
  sig alu_out[32];
  sig alu_alufn[6];
  sig we;
  sig wdsel[2];
  sig wa[4];
  sig asel[2];
  sig bsel[2];
  sig ra1[4];
  sig ra2[4];
  sig current_state[5];

  // Connect FSM
  fsm controller(
    .clk(clk), 
    .rst(rst),
    .alu_a(alu_a), 
    .alu_b(alu_b),
    .alu_out(alu_out),
    .alu_alufn(alu_alufn),
    .we(we), 
    .wdsel(wdsel), 
    .wa(wa),
    .asel(asel), 
    .bsel(bsel), 
    .ra1(ra1), 
    .ra2(ra2),
    .current_state(current_state)
  );

  // ALU
  alu alu_unit(
    .a(alu_a), 
    .b(alu_b),
    .alufn(alu_alufn), 
    .out(alu_out)
  );

  // MAX7219 driver
  max7219_driver max7219_driver(#CHAIN(CHAIN));

  // Bunny + "PLAY" matrix display
  const SCREEN_IDLE = {
    {8hA5, 8hE1, 8hEA, 8h3C},
    {8h7E, 8h21, 8h8A, 8h7E},
    {8hFF, 8h21, 8h8A, 8h99},
    {8hDB, 8h21, 8h8A, 8h99},
    {8hFF, 8h2F, 8hEE, 8hFF},
    {8hFF, 8h29, 8hAA, 8h7E},
    {8h66, 8h29, 8hAA, 8h3C},
    {8h24, 8h2F, 8hAE, 8h66}
  };

  always {
    io_led[0] = current_state[3:0] + 4b0000;
    io_led[1] = 8h00;
    io_led[2] = 8h00;

    if (current_state != STATE_IDLE) {
      has_drawn = 0;
    }

    if (current_state == STATE_IDLE && !has_drawn && !max7219_driver.done) {
      segment_values = SCREEN_IDLE;
      max7219_driver.segment_values = segment_values;
      max7219_driver.new = 1;
      has_drawn = 1;
    }

    io_segment = 8h00;
    io_select = 4b1111;
  }
}